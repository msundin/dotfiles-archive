" DOCUMENTATION
"" Source your .vimrc
"source ~/.vimrc
"" See all available commands
" :actionlist
set relativenumber
set number
set ignorecase
set smartcase
set easymotion
set surround
set commentary

set number
" map ESC to jk
inoremap jk <esc>
vnoremap jk <esc>
let mapleader = " "
" yank to clipboard
set clipboard+=unnamed
set idearefactormode=keep
" these create newlines like o and O but stay in normal mode
nmap zj o<Esc>k
nmap zk O<Esc>j

comment
nmap <leader>; <action>(QuickJavaDoc)
nmap <leader>/ <action>(CommentByLineComment)
vmap <leader>/ <action>(CommentByLineComment)
" nmap <leader>lc <action>(ActivateLogcatToolWindow)
vmap <leader>f <action>(ExtractFunction)
nmap <leader>g <action>(Annotate)
nmap <leader>b <action>(ToggleLineBreakpoint)
nmap <leader>p <action>(ShowSettings)
nmap <leader>q <action>(HideSideWindows)
"nmap <leader>x <action>(CloseGotItTooltip)
"nmap <leader>x <action>(FocusEditor)
"nmap <leader>x <action>(PopupMenu-cancel)
"nmap <leader>x <action>(CloseActiveTab)
nmap <leader>x <action>(CloseEditor)

nmap <leader>. <action>(NextSplitter)
nmap <leader>n <action>(PrevSplitter)
nmap <leader>r <action>(Run)
nmap <leader>d <action>(GotoDeclaration)
nmap <leader>s <action>(GotoSuperMethod)
nmap <leader>i <action>(GotoImplementation)
nmap <leader>u <action>(FindUsages)
nmap <leader>h <action>(Back)
nmap <leader>l <action>(Forward)
nmap <leader>j <action>(PreviousTab)
nmap <leader>k <action>(NextTab)
nmap <leader>f <action>(SelectInProjectView)
nmap <leader>c <action>(RenameElement)
nmap <leader>t <action>(ExpressionTypeInfo)
nmap <leader>e <action>(GotoNextError)
nmap <leader>a <action>(ReformatCode)
nmap <leader>m <action>(RecentFiles)
nmap <leader>, <action>(GotoClass)
nmap <leader>y <action>(CollapseRegion)
nmap <leader>o <action>(ExpandRegion)

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc
